using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using IP_Help.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Identity;
using SendGrid;
using SendGrid.Helpers.Mail;

namespace IP_Help.Controllers
{
    [Authorize]
    [Route("api/[controller]")]
    public class Forms : Controller
    {
        private readonly UserManager<ApplicationUser> _userManager;
        public Forms(UserManager<ApplicationUser> userManager)
        {
            _userManager = userManager;
        }

        [HttpPost("[action]")]
        public async Task PCOrder(PCOrder model)
        {
            var submittedby = _userManager.GetUserName(HttpContext.User);
            var apiKey = Environment.GetEnvironmentVariable("sendgrid");
            var client = new SendGridClient(apiKey);
            var from = new EmailAddress(submittedby, "I&P Help");
            var subject = "Request for new PC";
            var to = new EmailAddress(submittedby, "Client");
            var plainTextContent = 
                String.Format
                ("<strong> A new PC request has been submitted.</strong><br><br><strong> Customer: </strong><br> {0} <br><br><strong> Customer's phone number: </strong><br> {1} <br><br><strong> Department: </strong><br> {2} <br><br><strong> Machine type: </strong><br> {3} <br><br><strong> Recipient's name: </strong><br> {4} <br><br><strong> Recipient's network ID: </strong><br> {5} <br><br><strong> Recipients location: </strong><br> {6} <br><br><strong> Accessories </strong><br> {13} <br><br><strong> Non-standard accessories </strong><br> {14} <br><br><strong> Non-standard software applications </strong><br> {15} <br><br><strong> New employee, or existing staff member: </strong><br> {7} <br><br><i> If new employee </i> <br><br><strong> Permanent employee, or intern: </strong><br> {8} <br><br><strong> Was a functioning computer plugged into the network port in the last month?: </strong><br> {9} <br><br><i> If existing employee </i> <br><br><strong> Recipients current computer number: </strong><br> {10} <br><br><strong> Is the recipients current computer functioning?: </strong><br> {11} <br><br><strong> OTRS ticket number associated with replacement: </strong><br> {12} <br><br><br><strong> This message was automatically generated by the system.  Do not reply.</strong>",
                         submittedby, // 0
                         model.CustomerPhone, // 1
                         model.Department, // 2
                         model.MachineType, // 3 
                         model.UserName, // 4
                         model.UserNetworkID, // 5
                         model.Location, // 6
                         model.EmploymentStatus, // 7
                         model.EmploymentType, // 8
                         model.PreviouslyFunctioning, // 9
                         model.ComputerNumber, // 10
                         model.ComputerFunctioning, // 11
                         model.OTRSTicket, // 12
                         model.AccessoriesRelay, // 13
                         model.OtherAccessories, // 14
                         model.SoftwareApplications); // 15
            var htmlContent = 
                String.Format
                ("<strong> A new PC request has been submitted.</strong><br><br><strong> Customer: </strong><br> {0} <br><br><strong> Customer's phone number: </strong><br> {1} <br><br><strong> Department: </strong><br> {2} <br><br><strong> Machine type: </strong><br> {3} <br><br><strong> Recipient's name: </strong><br> {4} <br><br><strong> Recipient's network ID: </strong><br> {5} <br><br><strong> Recipients location: </strong><br> {6} <br><br><strong> Accessories </strong><br> {13} <br><br><strong> Non-standard accessories </strong><br> {14} <br><br><strong> Non-standard software applications </strong><br> {15} <br><br><strong> New employee, or existing staff member: </strong><br> {7} <br><br><i> If new employee </i> <br><br><strong> Permanent employee, or intern: </strong><br> {8} <br><br><strong> Was a functioning computer plugged into the network port in the last month?: </strong><br> {9} <br><br><i> If existing employee </i> <br><br><strong> Recipients current computer number: </strong><br> {10} <br><br><strong> Is the recipients current computer functioning?: </strong><br> {11} <br><br><strong> OTRS ticket number associated with replacement: </strong><br> {12} <br><br><br><strong> This message was automatically generated by the system.  Do not reply.</strong>",
                         submittedby, // 0
                         model.CustomerPhone, // 1
                         model.Department, // 2
                         model.MachineType, // 3 
                         model.UserName, // 4
                         model.UserNetworkID, // 5
                         model.Location, // 6
                         model.EmploymentStatus, // 7
                         model.EmploymentType, // 8
                         model.PreviouslyFunctioning, // 9
                         model.ComputerNumber, // 10
                         model.ComputerFunctioning, // 11
                         model.OTRSTicket, // 12
                         model.AccessoriesRelay, // 13
                         model.OtherAccessories, // 14
                         model.SoftwareApplications); // 15
            var msg = MailHelper.CreateSingleEmail(from, to, subject, plainTextContent, htmlContent);
            var response = await client.SendEmailAsync(msg);
        }

        [HttpPost("[action]")]
        public async Task MobileDevice(MobileDevice model)
        {
            var submittedby = _userManager.GetUserName(HttpContext.User);
            var apiKey = Environment.GetEnvironmentVariable("sendgrid");
            var client = new SendGridClient(apiKey);
            var from = new EmailAddress(submittedby, "I&P Help");
            var subject = "Request for new mobile device";
            var to = new EmailAddress(submittedby, "Client");
            var plainTextContent = 
                String.Format
                ("<strong> A new mobile device request has been submitted.</strong><br><br><strong> Customer: </strong><br> {0} <br><br><strong> Device type: </strong><br> {1} <br><br><strong> New, or replacement: </strong><br> {2} <br><br><strong> Job title and description: </strong><br> {3} <br><br><br><strong> This message was automatically generated by the system.  Do not reply.</strong>",
                         submittedby, // 0
                         model.DeviceType, // 1
                         model.NewReplacement, // 2
                         model.JobTitle); // 3
            var htmlContent = 
                String.Format
                ("<strong> A new mobile device request has been submitted.</strong><br><br><strong> Customer: </strong><br> {0} <br><br><strong> Device type: </strong><br> {1} <br><br><strong> New, or replacement: </strong><br> {2} <br><br><strong> Job title and description: </strong><br> {3} <br><br><br><strong> This message was automatically generated by the system.  Do not reply.</strong>",
                         submittedby, // 0
                         model.DeviceType, // 1
                         model.NewReplacement, // 2
                         model.JobTitle); // 3
            var msg = MailHelper.CreateSingleEmail(from, to, subject, plainTextContent, htmlContent);
            var response = await client.SendEmailAsync(msg);
        }
    }
}
