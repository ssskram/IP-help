using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using IP_Help.Models;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Identity;
using SendGrid;
using SendGrid.Helpers.Mail;

namespace IP_Help.Controllers
{
    [Authorize]
    [Route("api/[controller]")]
    public class Forms : Controller
    {
        private readonly UserManager<ApplicationUser> _userManager;
        public Forms(UserManager<ApplicationUser> userManager)
        {
            _userManager = userManager;
        }

        [HttpPost("[action]")]
        public async Task PCOrder(PCOrder model)
        {
            var submittedby = _userManager.GetUserName(HttpContext.User);
            var apiKey = Environment.GetEnvironmentVariable("sendgrid");
            var client = new SendGridClient(apiKey);
            var from = new EmailAddress(submittedby, "I&P Help Desk");
            var subject = "Your form has been submitted";
            var to = new EmailAddress(submittedby, "Client");
            var plainTextContent = 
                String.Format
                ("<strong> A new PC request has been submitted. </strong><br><br><strong> Customers's name: </strong><br> {0} <br><br><strong> Customer's email address: </strong><br> {1} <br><br><strong> Phone number: </strong><br> {2} <br><br><strong> Department: </strong><br> {3} <br><br><strong> Supervisor's email: </strong><br> {4} <br><br><strong> Type of machine: </strong><br> {5} <br><br><strong> Type of order: </strong><br> {6} <br><br><strong> If replacement, OTRS ticket number: </strong><br> {7} <br><br><strong> Necessary software applications: </strong><br> {8} <br><br><strong> Necessary accessories: </strong><br> {9} <br><br><br><strong> This message was automatically generated by the system.  Do not reply.</strong>",
                         model.CustomerName, // 0
                         model.CustomerEmail, // 1
                         model.CustomerPhone, // 2
                         model.Department, // 3
                         model.SupervisorEmail, // 4 
                         model.MachineType, // 5
                         model.OrderType, // 6
                         model.OTRSTicket, // 7
                         model.SoftwareApplications, // 8
                         model.Accessories); // 9
            var htmlContent = 
                String.Format
                ("<strong> A new PC request has been submitted. </strong><br><br><strong> Customers's name: </strong><br> {0} <br><br><strong> Customer's email address: </strong><br> {1} <br><br><strong> Phone number: </strong><br> {2} <br><br><strong> Department: </strong><br> {3} <br><br><strong> Supervisor's email: </strong><br> {4} <br><br><strong> Type of machine: </strong><br> {5} <br><br><strong> Type of order: </strong><br> {6} <br><br><strong> If replacement, OTRS ticket number: </strong><br> {7} <br><br><strong> Necessary software applications: </strong><br> {8} <br><br><strong> Necessary accessories: </strong><br> {9} <br><br><br><strong> This message was automatically generated by the system.  Do not reply.</strong>",
                         model.CustomerName, // 0
                         model.CustomerEmail, // 1
                         model.CustomerPhone, // 2
                         model.Department, // 3
                         model.SupervisorEmail, // 4 
                         model.MachineType, // 5
                         model.OrderType, // 6
                         model.OTRSTicket, // 7
                         model.SoftwareApplications, // 8
                         model.Accessories); // 9
            var msg = MailHelper.CreateSingleEmail(from, to, subject, plainTextContent, htmlContent);
            var response = await client.SendEmailAsync(msg);
        }
    }
}
